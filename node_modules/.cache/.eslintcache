[{"/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/index.js":"1","/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/App.js":"2","/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/reportWebVitals.js":"3","/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/Header.js":"4","/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/Todos.js":"5","/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/Footer.js":"6","/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/TodoItem.js":"7","/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/AddTodo.js":"8","/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/About.js":"9"},{"size":535,"mtime":1671979299790,"results":"10","hashOfConfig":"11"},{"size":2289,"mtime":1672054944505,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1671979299791,"results":"13","hashOfConfig":"11"},{"size":1665,"mtime":1672055012853,"results":"14","hashOfConfig":"11"},{"size":750,"mtime":1672055435814,"results":"15","hashOfConfig":"11"},{"size":418,"mtime":1672048386958,"results":"16","hashOfConfig":"11"},{"size":292,"mtime":1672055488344,"results":"17","hashOfConfig":"11"},{"size":1482,"mtime":1672055267641,"results":"18","hashOfConfig":"11"},{"size":973,"mtime":1672052209132,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1dw7xvl",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/index.js",[],[],[],"/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/App.js",["52"],[],"import \"./App.css\";\nimport Header from \"./MyComponents/Header\"; //name\nimport { Todos } from \"./MyComponents/Todos\"; //constant\nimport { Footer } from \"./MyComponents/Footer\"; //constant\nimport React, { useState, useEffect } from \"react\";\nimport { AddTodo } from \"./MyComponents/AddTodo\";\nimport { About } from \"./MyComponents/About\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  let initTodo;\n  if (localStorage.getItem(\"todos\") === null) {\n    initTodo = [];\n  } else {\n    initTodo = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n  const onDelete = (todo) => {\n    console.log(\"I am Deleted!!! \", todo);\n    // Deleting this way in react doesn't work!!!!\n    // let index=todos.indexOf(todo);\n    // todos.splice(index,1);\n    setTodos(\n      todos.filter((e) => {\n        return e != todo;\n      })\n    );\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const addTodo = (title, desc) => {\n    console.log(\"adding this todo\", title, desc);\n    let sno = todos.length + 1;\n    const myTodo = {\n      sno: sno,\n      title: title,\n      desc: desc,\n    };\n    setTodos([...todos, myTodo]);\n    console.log(myTodo);\n  };\n  const [todos, setTodos] = useState(initTodo);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  // const [todos, setTodos] = useState(initTodo); // defining empty todo array by using useState\n\n  return (\n    <Router>\n      <Header title=\"My Todos List\" searchBar={false} />\n      <Routes>\n        {/* older version of react router */}\n        {/* <Route  path='/' render={() => {\n      return(\n        <>\n        element={<AddTodo addTodo={addTodo}/>}\n        element={<Todos todos={todos} onDelete={onDelete}/>}\n        </>\n      )\n    }}>\n    </Route> */}\n\n        {/* <Route  path='/' element={<AddTodo addTodo={addTodo} />}/>\n    <Route  path='/' element={<Todos todos={todos} onDelete={onDelete} />}/> */}\n\n        <Route\n          path=\"/\"\n          element={\n            <>\n              <AddTodo addTodo={addTodo} />,\n              <Todos todos={todos} onDelete={onDelete} />\n            </>\n          }\n        />\n        <Route path=\"/About\" element={<About />} />\n      </Routes>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/reportWebVitals.js",[],[],"/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/Header.js",["53"],[],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from \"react-router-dom\";\nimport {About} from \"../MyComponents/About\"\n\nexport default function Header(props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link active\" to=\"/About\">About</Link>\n              </li>\n            </ul>\n            {props.searchBar? <form className=\"d-flex\">\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n            </form>:\"\"}\n          </div>\n        </div>\n      </nav>\n  )\n}\n\n//if title is not specified then below function will take care of title\nHeader.defaultProps={\n    title:\"Your Title Here\",\n    searchBar: true\n}\n\n//only strings are allowed as Link title\nHeader.protoTypes = {\n    title : PropTypes.string,\n    searchBar: PropTypes.bool.isRequired\n}\n","/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/Todos.js",[],[],"/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/Footer.js",[],[],"/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/TodoItem.js",[],[],"/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/AddTodo.js",["54"],[],"import React from 'react'\nimport { useState } from 'react';\n\nexport const AddTodo = (props,todo, onAdd) => {\n    const [title, setTitle] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const submit=(e)=>{\n        e.preventDefault();\n        // if(title){\n        //     alert(\"Title can not be blank\")\n        // }\n        // props.addTodo(title,desc);\n        {!title ? alert(\"Title can not be blank\"):\n        props.addTodo(title,desc);\n        setTitle(\"\");\n        setDesc(\"\");\n    }\n    }\n\n    return (\n        <div className='text-center container my-3'>\n            <h3>Add a Todo</h3>\n            <form onSubmit={submit}>\n                <div className=\"mb-1\">\n                    <label htmlFor=\"title\" className=\"form-label\">Task</label>\n                    <input type=\"text\" value={title} onChange={(e)=>{setTitle(e.target.value)}} className=\"form-control\" id=\"title\" aria-describedby=\"emailHelp\" />\n                </div>\n                <div className=\"mb-1 \" >\n                    <label htmlFor=\"desc\" className=\"form-label\">Task Description</label>\n                    <input type=\"text\" value={desc} onChange={(e)=>{setDesc(e.target.value)}} className=\"form-control\" id=\"desc\" />\n                </div>\n                \n                <button type=\"submit\" className=\"btn btn-success btn-sm\" >Add Todo</button>\n            </form>\n        </div>\n    )\n}\n\n\n//  onChange={(e)=>{setTitle(e.target.value)}} ................ proprty to accept text  value",[],"/Users/adeshpadwal/Desktop/Web Development/React/todos-list/src/MyComponents/About.js",[],[],{"ruleId":"55","severity":1,"message":"56","line":25,"column":18,"nodeType":"57","messageId":"58","endLine":25,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":4,"column":9,"nodeType":"61","messageId":"62","endLine":4,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":13,"column":9,"nodeType":"65","messageId":"66","endLine":17,"endColumn":6},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock"]